/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 .\hello.glb 
Author: Builder123YT (https://sketchfab.com/dejesuscamarilloo)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/polygon-future-character-37e346ff2c3c4d469556ccf154c8c366
Title: Polygon future character
*/
"use client";

import React, { useEffect, useRef, useState } from "react";
import { useFrame, useGraph, useThree } from "@react-three/fiber";
import { useGLTF, useAnimations, Html } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import * as THREE from "three";
import { GLTF } from "three-stdlib";
import { Tooltip, TooltipContent, TooltipProvider } from "../ui/tooltip";
import Link from "next/link";

type GLTFResult = GLTF & {
  nodes: {
    Object_7: THREE.SkinnedMesh;
    Object_9: THREE.SkinnedMesh;
    Object_11: THREE.SkinnedMesh;
    Object_13: THREE.SkinnedMesh;
    _rootJoint: THREE.Bone;
  };
  materials: {
    "Scene_-_Root": THREE.Material;
  };
};

export default function Model({
  scrollY,
  position,
}: {
  scrollY: number;
  position?: number;
}) {
  const meshRef = useRef<THREE.Group>(null!);

  const { scene, animations } = useGLTF("/hello.glb") as GLTFResult;
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone) as GLTFResult;
  const { actions } = useAnimations(animations, meshRef);
  const [showTooltip, setShowTooltip] = useState(false);

  const { viewport } = useThree();

  useFrame(() => {
    if (!meshRef.current) return;
    meshRef.current.rotation.x = scrollY / 1000;
    meshRef.current.position.y = -scrollY / 100 + viewport.height / 100;
  });

  useEffect(() => {
    actions["mixamo.com"]?.play();
  }, [actions]);

  return (
    <group
      ref={meshRef}
      position={position ?? [0, 0, 0]}
      scale={[1, 1, 1]}
      castShadow
      visible={true}
      receiveShadow={true}
      frustumCulled={true}
      isGroup={true}
    >
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          scale={165.943}
          onClick={() => setShowTooltip(!showTooltip)}
        >
          <group name="Salutefbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Object_4">
                  <primitive object={nodes._rootJoint} />
                  <group name="Object_6" />
                  <group name="Object_8" />
                  <group name="Object_10" />
                  <group name="Object_12" />
                  <group name="SM_Chr_Attach_Helmet_01" />
                  <group name="SM_Chr_Attach_Beard_01" />
                  <group name="SM_Chr_Attach_Hair_Male_01" />
                  <group name="SM_Chr_MechPilot_Male_01" />
                  <skinnedMesh
                    name="Object_7"
                    geometry={nodes.Object_7.geometry}
                    material={materials["Scene_-_Root"]}
                    skeleton={nodes.Object_7.skeleton}
                  />
                  <skinnedMesh
                    name="Object_9"
                    geometry={nodes.Object_9.geometry}
                    material={materials["Scene_-_Root"]}
                    skeleton={nodes.Object_9.skeleton}
                  />
                  <skinnedMesh
                    name="Object_11"
                    geometry={nodes.Object_11.geometry}
                    material={materials["Scene_-_Root"]}
                    skeleton={nodes.Object_11.skeleton}
                  />
                  <skinnedMesh
                    name="Object_13"
                    geometry={nodes.Object_13.geometry}
                    material={materials["Scene_-_Root"]}
                    skeleton={nodes.Object_13.skeleton}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
        <Html position={[-0.1, 2.8, 0.1]} center>
          <TooltipProvider>
            <Tooltip open={showTooltip}>
              <TooltipContent className="bg-primary  text-white">
                model author:{" "}
                <Link
                  href={"https://sketchfab.com/dejesuscamarilloo"}
                  target="_blank"
                >
                  Builder123YT
                </Link>
                <div className="absolute w-3 h-3 bg-primary rotate-45 -bottom-1 transform -translate-x-1/2" />
              </TooltipContent>
            </Tooltip>
          </TooltipProvider>
        </Html>
      </group>
    </group>
  );
}

useGLTF.preload("/hello.glb");
